@using MexicanRestaurant.WebUI.ViewModels
@model ProductListViewModel
@{
    ViewData["Title"] = "Menu Items";
    ViewData["MetaDescription"] = "Explore our delicious selection of authentic Mexican food items, freshly made with quality ingredients.";
}
<form method="get" asp-action="Index" class="my-4" aria-describedby="formDescription">
    <div id="formDescription" class="visually-hidden">Use the following form to filter, search and sort through the available Mexican food menu items.</div>
    <div class="row gy-3 align-items-end">

        <div class="col-md-4 col-sm-12">
            <label for="searchTerm" class="form-label fw-bold text-dark">Search</label>
            <input type="text" id="searchTerm" name="searchTerm" value="@Model.Filter.SearchTerm" class="form-control" placeholder="Search products..." aria-label="Search term" />
        </div>

        <div class="col-md-3 col-sm-6">
            <label for="categoryId" class="form-label fw-bold text-dark">Category</label>
            <select id="categoryId" name="categoryId" class="form-select" aria-label="Select category">
                <option value="">All Categories</option>
                @foreach (var category in Model.Filter.Categories)
                {
                    var selected = category.Value == Model.Filter.SelectedCategoryId?.ToString() ? "selected" : null;
                    <option value="@category.Value" selected="@selected">@category.Text</option>
                }
            </select>
        </div>

        <div class="col-md-3 col-sm-6">
            <label for="sortBy" class="form-label fw-bold text-dark">Sort By</label>
            <select id="sortBy" name="sortBy" class="form-select" aria-label="Sort products by">
                <option value="">Sort by</option>
                <option value="name_asc" selected="@(Model.Filter.SortBy == "name_asc")">Name ↑</option>
                <option value="name_desc" selected="@(Model.Filter.SortBy == "name_desc")">Name ↓</option>
                <option value="price_asc" selected="@(Model.Filter.SortBy == "price_asc")">Price ↑</option>
                <option value="price_desc" selected="@(Model.Filter.SortBy == "price_desc")">Price ↓</option>
            </select>
        </div>

        <div class="col-md-2 col-sm-12 d-flex gap-2">
            <button type="submit" class="btn btn-success w-100" aria-label="Apply filters">
                <i class="bi bi-funnel-fill"></i> Filter
            </button>
            <a href="@Url.Action("Index", "Product")" class="btn btn-secondary w-100" aria-label="Reset filters">
                <i class="bi bi-x-circle"></i> Reset
            </a>
        </div>
    </div>
</form>

<div class="container my-4 d-flex flex-column justify-content-between" style="min-height: 80vh;">
    <h1 class="text-center mb-3 text-success fw-bold" aria-label="@ViewData["Title"]">@ViewData["Title"]</h1>
    <div class="d-flex justify-content-start mb-3">
        <a asp-action="AddEdit" asp-controller="Product" class="btn btn-success" aria-label="Add new product">
            <i class="bi bi-plus-circle"></i> Create New Item
        </a>
    </div>

    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
        @foreach (ProductViewModel product in Model.Products)
        {
            <div class="col">
                <div class="card h-100 shadow-lg border-0" style="background-color: #f9f5d985" aria-labelledby="product-title-@product.ProductId">
                    <div class="product-wrapper">
                        <img src="@Url.Content("~/images/" + product?.ImageUrl)"
                             class="card-img-top img-fluid" width="336" height="220"
                             style="height: 220px; object-fit: cover;" alt="Image of @product?.Name" loading="lazy" />

                        <a asp-action="Details" asp-controller="Product" asp-route-id="@product?.ProductId"
                           class="btn btn-lg btn-success details-btn" aria-label="View details for @product?.Name">
                            Details
                        </a>
                    </div>
                    <div class="card-body">
                        <h2 class="card-title fw-bolder text-success" id="product-title-@product?.ProductId">@product?.Name</h2>
                        <p class="card-text text-muted">@product?.Description</p>
                        <p class="text-muted"><strong>Category:</strong> <span class="text-dark">@product?.CategoryName</span></p>
                        <div class="d-flex justify-content-around">
                        <p class="card-text"><strong>Price:</strong> @product?.Price.ToString("C")</p>
                        <p class="card-text"><strong>Stock:</strong> @product?.Stock</p>
                        </div>
                    </div>
                    <div class="card-footer border-0 d-flex justify-content-between">
                        <a asp-action="AddEdit" asp-route-id="@product?.ProductId" class="btn btn-secondary btn-sm" style="width: 75.53px" aria-label="Edit @product?.Name"><i class="bi bi-pencil-square"></i> Edit</a>
                        <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal"
                                data-bs-target="#deleteModal" data-product-id="@product?.ProductId" data-product-name="@product?.Name" aria-label="Delete @product?.Name">
                            <i class="bi bi-trash-fill"></i> Delete
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="m-4">
        <nav class="d-flex justify-content-center" role="navigation" aria-label="Pagination">
            <ul class="pagination pagination-sm">
                @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                        <a class="page-link shadow-sm @(i == Model.Pagination.CurrentPage ? "bg-success text-white border-success" : "")"
                           href="@Url.Action("Index", "Product", new {
                               page = i,
                               searchTerm = Model.Filter.SearchTerm,
                               categoryId = Model.Filter.SelectedCategoryId,
                               sortBy = Model.Filter.SortBy
                           })" style="margin: 0 2px;" aria-label="Go to page @i">
                            @i
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>

</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form method="post" asp-action="Delete">
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete <strong id="modalProductName"></strong> ?
                    <input type="hidden" name="id" id="modalProductId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const productId = button.getAttribute('data-product-id');
            const productName = button.getAttribute('data-product-name');

            document.getElementById('modalProductId').value = productId;
            document.getElementById('modalProductName').textContent = productName;
        });
    </script>
}
