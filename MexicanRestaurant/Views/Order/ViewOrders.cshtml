@using MexicanRestaurant.Core.Enums;
@using MexicanRestaurant.WebUI.ViewModels
@model UserOrdersViewModel
@{
    ViewData["Title"] = "View Orders";
    ViewData["MetaDescription"] = "Track your previous orders. View dates, items, and total cost of your Mexican food purchases.";
}

<div class="container my-5 d-flex flex-column justify-content-between">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-lg border-0" style="min-height: 75vh;">
                <div class="card-header bg-success text-white text-center">
                    <h2 class="fw-bold mb-0">🧾 My Orders</h2>
                    <p class="fw-light mb-0">All your previous orders are listed below</p>
                </div>
                <div class="card-body">
                    @if (Model.Orders.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover align-middle">
                                <thead class="table-light text-center">
                                    <tr>
                                        <th scope="col">Order ID</th>
                                        <th>Date</th>
                                        <th>Total</th>
                                        <th>Items</th>
                                        <th>Shipping Address</th>
                                        <th>Delivery</th>
                                        <th>Payment Method</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var order in Model.Orders)
                                    {
                                        <tr>
                                            <td class="text-center fw-semibold">#@order.OrderId</td>
                                            <td class="text-center">@order.OrderDate.ToString("g")</td>
                                            <td class="text-center text-success fw-bold">@order.TotalAmount.ToString("C")</td>
                                            <td>
                                                <ul class="list-unstyled mb-0">
                                                    @foreach (var item in order.OrderItems)
                                                    {
                                                        <li class="d-flex justify-content-between border-bottom py-1 small">
                                                            <span>@item.Product.Name</span>
                                                            <span class="text-muted">Qty: @item.Quantity × @item.Price.ToString("C")</span>
                                                        </li>
                                                    }
                                                </ul>
                                            </td>
                                            <td>
                                                <address class="small text-muted">
                                                    @order.ShippingAddress?.Street<br />
                                                    @order.ShippingAddress?.City, @order.ShippingAddress?.State<br />
                                                </address>
                                            </td>
                                            <td class="text-center">
                                                @order.DeliveryShortName
                                            </td>
                                            <td class="text-center">
                                                @if (!string.IsNullOrEmpty(order.PaymentMethod))
                                                {
                                                    <span class="badge @(order.PaymentMethod.ToLower() == "stripe" ? "bg-success" : "bg-secondary") text-white">
                                                        @order.PaymentMethod
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary text-white">Not Specified</span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                @switch (order.Status)
                                                {
                                                    case OrderStatus.Pending:
                                                        <span class="badge bg-warning text-dark">Pending</span>
                                                        break;
                                                    case OrderStatus.Confirmed:
                                                        <span class="badge bg-info text-dark">Confirmed</span>
                                                        break;
                                                    case OrderStatus.Preparing:
                                                        <span class="badge bg-secondary text-white">Preparing</span>
                                                        break;
                                                    case OrderStatus.OutForDelivery:
                                                        <span class="badge bg-primary">Out for Delivery</span>
                                                        break;
                                                    case OrderStatus.Delivered:
                                                        <span class="badge bg-success">Delivered</span>
                                                        break;
                                                    case OrderStatus.Cancelled:
                                                        <span class="badge bg-danger">Cancelled</span>
                                                        break;
                                                }
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No orders placed yet.</p>
                    }
                </div>
                <div class="card-footer bg-white border-top-0 text-start">
                    <a asp-action="Create" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Menu
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="m-4">
        <nav class="d-flex justify-content-center">
            <ul class="pagination pagination-sm">
                @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                        <a class="page-link shadow-sm @(i == Model.Pagination.CurrentPage ? "bg-success text-white border-success" : "")"
                           href="@Url.Action("ViewOrders", "Order", new { page = i })" style="margin: 0 2px;">
                            @i
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>

</div>
