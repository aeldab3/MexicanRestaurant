@using MexicanRestaurant.WebUI.ViewModels
@model OrderViewModel
@{
    ViewData["Title"] = "Create Order";
    ViewData["MetaDescription"] = "Browse our delicious Mexican dishes and add them to your cart. Enjoy authentic flavors and fresh ingredients.";
    ViewData["MetaKeywords"] = "Mexican food, order online, tacos, burritos, spicy food";
}

@{
    var isAuthenticated = User.Identity?.IsAuthenticated ?? false;
}
<body data-authenticated="@isAuthenticated.ToString().ToLower()">
    <form method="get" asp-action="Create" class="my-4">
        <div class="row gy-3 align-items-end">
    
            <div class="col-md-4 col-sm-12">
                <label for="searchTerm" class="form-label fw-bold text-dark">Search</label>
                <input type="text" id="searchTerm" name="searchTerm" value="@Model.Filter.SearchTerm" class="form-control" placeholder="Search products..." />
            </div>
    
            <div class="col-md-3 col-sm-6">
                <label for="categoryId" class="form-label fw-bold text-dark">Category</label>
                <select id="categoryId" name="categoryId" class="form-select">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Filter.Categories)
                    {
                        var selected = category.Value == Model.Filter.SelectedCategoryId?.ToString() ? "selected" : null;
                        <option value="@category.Value" selected="@selected">@category.Text</option>
                    }
                </select>
            </div>
    
            <div class="col-md-3 col-sm-6">
                <label for="sortBy" class="form-label fw-bold text-dark">Sort By</label>
                <select id="sortBy" name="sortBy" class="form-select">
                    <option value="">Sort by</option>
                    <option value="name_asc" selected="@(Model.Filter.SortBy == "name_asc")">Name ↑</option>
                    <option value="name_desc" selected="@(Model.Filter.SortBy == "name_desc")">Name ↓</option>
                    <option value="price_asc" selected="@(Model.Filter.SortBy == "price_asc")">Price ↑</option>
                    <option value="price_desc" selected="@(Model.Filter.SortBy == "price_desc")">Price ↓</option>
                </select>
            </div>
    
            <div class="col-md-2 col-sm-12 d-flex gap-2">
                <button type="submit" class="btn btn-success w-100">
                    <i class="bi bi-funnel-fill"></i> Filter
                </button>
                <a href="@Url.Action("Create", "Order")" class="btn btn-secondary w-100">
                    <i class="bi bi-x-circle"></i> Reset
                </a>
            </div>
        </div>
    </form>
    
    <div class="container my-4 d-flex flex-column justify-content-between" style="min-height: 80vh;">
        <h1 class="text-center text-success mb-4 fw-bold">@ViewData["Title"]</h1>
        <div class="row justify-content-center">
            @foreach (var product in Model.Products)
            {
                <div class="col-md-4 col-lg-3 mb-4">
                    <form asp-action="AddItem" asp-route-page="@Model.Pagination.CurrentPage" method="post" class="h-100">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="prodId" value="@product.ProductId" />
                        <div class="card shadow-lg border-0 h-100" style="background-color: #f9f5d985">
                            <div class="product-wrapper">
                                <img src="@Url.Content("~/images/" + product?.ImageUrl)"
                                     class="card-img-top img-fluid"
                                     style="height: 220px; object-fit: cover;" alt="@product?.Name" height="220" width="255" loading="lazy"/>
                                <a asp-action="Details" asp-controller="Product" asp-route-id="@product.ProductId"
                                   class="btn btn-lg btn-success details-btn">
                                    Details
                                </a>
                            </div>                        
                            <div class="card-body d-flex flex-column justify-content-between">
                                <h2 class="card-title text-success fw-bolder">@product.Name</h2>
                                <p class="card-text text-muted"><strong>@product?.Price.ToString("C")</strong></p>
    
                                <div class="input-group mb-2">
                                    <input type="hidden" name="prodId" value="@product.ProductId" />
                                    <label for="prodQty-@product.ProductId" class="visually-hidden">Quantity</label>
                                    <input type="number" name="prodQty" class="form-control" id="prodQty-@product.ProductId" value="1" min="1" max="@product.Stock" />
                                </div>

                                @if (product.Stock == 0)
                                {
                                    <button type="button" class="btn btn-secondary w-100 mt-auto btn-out-of-stock" data-prod-name="@product.Name" style="cursor: not-allowed;">
                                        Out of Stock
                                    </button>
                                }
                                else 
                                {
                                    <button type="button" class="btn btn-success w-100 mt-auto btn-add-to-cart" data-prod-id="@product.ProductId" data-stock="@product.Stock">
                                        <i class="bi bi-cart-plus"></i> Add to Cart
                                    </button>
                                }
                            </div>
                        </div>
                    </form>
                </div>
            }
        </div>
        <div class="m-4">
            <nav class="d-flex justify-content-center">
                <ul class="pagination pagination-sm">
                    @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                            <a class="page-link shadow-sm @(i == Model.Pagination.CurrentPage ? "bg-success text-white border-success" : "")"
                                href="@Url.Action("Create", "Order", new {
                                    page = i,
                                    searchTerm = Model.Filter.SearchTerm,
                                    categoryId = Model.Filter.SelectedCategoryId,
                                    sortBy = Model.Filter.SortBy,
                                })" style="margin: 0 2px;">
                                 @i
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</body>
@section Scripts {
    <script src="~/js/orderCreate.js" asp-append-version="true"></script>
}
