@using MexicanRestaurant.WebUI.ViewModels
@model CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
    ViewData["MetaDescription"] = "This is the process for checkout your order";
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-xl-10 col-lg-11 col-md-12">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-success text-white text-center py-4">
                    <h2 class="fw-bold mb-0">🚚 Checkout</h2>
                    <p class="fw-light mb-0">Enter your shipping info and choose delivery method</p>
                </div>

                <div class="card-body p-4">
                    <form asp-action="Checkout" method="post" id="checkoutForm">
                        @Html.AntiForgeryToken()

                        <!-- Step 1: Shipping Address -->
                        <div id="step1" class="checkout-step">
                            <h3 class="mb-3">📍 Shipping Address</h3>
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label asp-for="ShippingAddress.FirstName" class="form-label">First Name</label>
                                    <input asp-for="ShippingAddress.FirstName" class="form-control" required />
                                    <span asp-validation-for="ShippingAddress.FirstName" class="text-danger"></span>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="ShippingAddress.LastName" class="form-label">Last Name</label>
                                    <input asp-for="ShippingAddress.LastName" class="form-control" required />
                                    <span asp-validation-for="ShippingAddress.LastName" class="text-danger"></span>
                                </div>
                                <div class="col-12">
                                    <label asp-for="ShippingAddress.Street" class="form-label"></label>
                                    <input asp-for="ShippingAddress.Street" class="form-control" required />
                                    <span asp-validation-for="ShippingAddress.Street" class="text-danger"></span>
                                </div>
                                <div class="col-md-4">
                                    <label asp-for="ShippingAddress.City" class="form-label"></label>
                                    <input asp-for="ShippingAddress.City" class="form-control" required />
                                    <span asp-validation-for="ShippingAddress.City" class="text-danger"></span>
                                </div>
                                <div class="col-md-4">
                                    <label asp-for="ShippingAddress.State" class="form-label"></label>
                                    <input asp-for="ShippingAddress.State" class="form-control" required />
                                    <span asp-validation-for="ShippingAddress.State" class="text-danger"></span>
                                </div>
                                <div class="col-md-4">
                                    <label asp-for="ShippingAddress.Zipcode" class="form-label"></label>
                                    <input asp-for="ShippingAddress.Zipcode" class="form-control" required />
                                    <span asp-validation-for="ShippingAddress.Zipcode" class="text-danger"></span>
                                </div>
                                <div class="col-12">
                                    <label asp-for="ShippingAddress.PhoneNumber" class="form-label">Phone Number</label>
                                    <input asp-for="ShippingAddress.PhoneNumber" class="form-control" required />
                                    <span asp-validation-for="ShippingAddress.PhoneNumber" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between mt-4">
                                <a asp-action="Cart" asp-controller="Order" class="btn btn-secondary shadow-sm">Back to cart</a>
                                <button type="button" class="btn btn-success shadow-sm next-step">Continue to Delivery</button>
                            </div>
                        </div>

                        <!-- Step 2: Delivery Method -->
                        <div id="step2" class="checkout-step" style="display:none;">
                            <h3 class="mb-3">🚛 Delivery Method</h3>
                            @if (Model.AvailableDeliveryMethods != null && Model.AvailableDeliveryMethods.Any())
                            {
                                foreach (var method in Model.AvailableDeliveryMethods)
                                {
                                    <div class="form-check mb-2">
                                        <label class="form-check-label">
                                            <input class="form-check-input" type="radio" asp-for="SelectedDeliveryMethodId" value="@method.Id" data-price="@method.Price" required />
                                            <strong>@method.ShortName</strong> - @method.Description (@method.Price.ToString("C"))
                                        </label>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-danger">⚠️ No delivery methods available.</p>
                            }
                            <span asp-validation-for="SelectedDeliveryMethodId" class="text-danger"></span>
                            <div class="d-flex justify-content-between mt-4">
                                <button type="button" class="btn btn-secondary shadow-sm prev-step">Back to Address</button>
                                <button type="button" class="btn btn-success shadow-sm next-step">Continue to Review</button>
                            </div>
                        </div>

                        <!-- Step 3: Review -->
                        <div id="step3" class="checkout-step" style="display:none;">
                            <h3 class="mb-3">🧾 Review Your Order</h3>
                            <p><strong>Name:</strong> <span id="reviewName"></span></p>
                            <p><strong>Phone:</strong> <span id="reviewPhone"></span></p>
                            <p><strong>Address:</strong> <span id="reviewAddress"></span></p>
                            <p><strong>Delivery:</strong> <span id="reviewDelivery"></span></p>

                            <div class="table-responsive">
                                <table class="table table-bordered table-striped table-hover">
                                    <thead class="table-success">
                                        <tr><th>Product</th><th>Qty</th><th>Price</th></tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.OrderItems)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="d-flex flex-column flex-md-row align-items-md-center gap-2">
                                                        <img src="@Url.Content("~/images/" + item.Product.ImageUrl)" class="img-fluid" style="max-width: 80px; height: auto; border-radius: 8px;" />
                                                        <span class="fw-semibold text-dark">@item.Product.Name</span>
                                                    </div>
                                                </td>
                                                <td>@item.Quantity</td>
                                                <td>@((item.Price * item.Quantity).ToString("C"))</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <p class="mt-3 fs-5"><strong>Total:</strong> <span id="reviewTotal">@Model.TotalAmount.ToString("C")</span></p>

                            <div class="d-flex justify-content-between mt-4">
                                <button type="button" class="btn btn-secondary shadow-sm prev-step">Back to Delivery</button>
                                <button type="button" class="btn btn-success shadow-sm next-step">Continue to Payment</button>
                            </div>
                        </div>

                        <!-- Step 4: Payment -->
                        <div id="step4" class="checkout-step" style="display:none;">
                            <h3 class="mb-3">💳 Payment Method</h3>
                            <select asp-for="SelectedPaymentMethod" class="form-select" id="paymentMethodSelect">
                                @foreach(var method in Model.AvailablePaymentMethods)
                                {
                                    <option value="@method">@method</option>
                                }
                            </select>
                            <span asp-validation-for="SelectedPaymentMethod" class="text-danger"></span>
                            <div id="stripePaymentForm" style="display:none;" class="mt-3">
                                <div id="card-element" class="form-control"></div>
                                <div id="card-errors" role="alert" class="text-danger"></div>
                            </div>
                            <div class="d-flex justify-content-between mt-4">
                                <button type="button" class="btn btn-secondary shadow-sm prev-step">Back to Review</button>
                                <button type="button" class="btn btn-success shadow-sm" id="submitPayment" aria-label="Submit your order">Submit Order</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const checkoutForm = document.getElementById('checkoutForm');
            const steps = [...document.querySelectorAll(".checkout-step")];
            let currentStep = parseInt('@(ViewBag.Step ?? "0")') || 0;

            const stripe = Stripe('@Model.StripePublishableKey')
            const elements = stripe.elements();
            let cardElement;
            const paymentSelect = document.getElementById("paymentMethodSelect");
            const stripeForm = document.getElementById('stripePaymentForm');
            const submitBtn = document.getElementById('submitPayment');

            const showStep = i => {
                steps.forEach((step, idx) => step.style.display =  idx === i ? "block" : "none");
                if (i === 3 && paymentSelect.value === 'stripe') {
                    stripeForm.style.display = 'block';
                    if (!cardElement) {
                        cardElement = elements.create('card');
                        cardElement.mount('#card-element');
                    }
                } else {
                    stripeForm.style.display = 'none';
                }
            };
          
            const validateStep = () => {
                if (currentStep === 0) {
                    return [...checkoutForm.querySelectorAll('[name^="ShippingAddress."]')].every(input => input.value.trim() !== '');
                }
                if (currentStep === 1) {
                    return !!checkoutForm.querySelector('input[name="SelectedDeliveryMethodId"]:checked');
                }
                return true;
            }

            function updateReview() {
                const getVal = name => document.querySelector(`[name="${name}"]`)?.value || "";
                document.getElementById("reviewName").textContent = `${getVal("ShippingAddress.FirstName")} ${getVal("ShippingAddress.LastName")}`;
                document.getElementById("reviewPhone").textContent = getVal("ShippingAddress.PhoneNumber");
                document.getElementById("reviewAddress").textContent = `${getVal("ShippingAddress.Street")}, ${getVal("ShippingAddress.City")}, ${getVal("ShippingAddress.Zipcode")}`;

                const deliveryInputs = checkoutForm.querySelector('input[name="SelectedDeliveryMethodId"]:checked');
                const label = deliveryInputs?.closest('label')?.textContent || "Not selected";
                const deliveryCost = parseFloat(deliveryInputs?.dataset.price || "0");
                const productTotal = parseFloat("@Model.TotalAmount") || 0;

                document.getElementById("reviewDelivery").innerText = label.trim();
                document.getElementById("reviewTotal").textContent = (productTotal + deliveryCost).toLocaleString("en-US", { style: "currency", currency: "USD" });
            };

            document.querySelectorAll(".next-step").forEach(btn => btn.addEventListener("click", () => {
                if (validateStep()) {
                    currentStep++;
                    showStep(currentStep);
                    if (currentStep ===2) updateReview();
                } else {
                    showToast('Please fill in all required fields.', 'warning');
                }
            }));

            document.querySelectorAll(".prev-step").forEach(btn => btn.addEventListener("click", () => {
                if (currentStep > 0) {
                    currentStep--;
                    showStep(currentStep);
                }
            }));

            paymentSelect.addEventListener("change", () => showStep(currentStep));
            submitBtn.addEventListener("click", async e => {
                e.preventDefault();
                if (!validateStep()) {
                    showToast("Please complete required info.", "error");
                    currentStep = 0;
                    showStep(currentStep);
                    return;
                }

                const formData = new FormData(checkoutForm);
                const result = await fetch('/Order/Checkout', { method: 'POST', body: formData });
                const data = await result.json();

                if (!data.isSuccess) {
                    showToast(data.message || "Payment failed.", "error");
                    return;
                }

                if (paymentSelect.value === "stripe") {
                    const { error, paymentIntent } = await stripe.confirmCardPayment(data.clientSecret, {
                        payment_method: { card: cardElement }
                    });
                    if (error) {
                        showToast(error.message, "error");
                    } else if (paymentIntent.status === "succeeded") {
                        window.location.href = "/Order/CheckoutSuccess";
                    }
                } else {
                    window.location.href = "/Order/CheckoutSuccess";
                }
            });
            showStep(currentStep);
        });
    </script>
}
