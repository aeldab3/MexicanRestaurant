@using MexicanRestaurant.WebUI.ViewModels
@model AdminDashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
    ViewData["MetaDescription"] = "Admin dashboard for the Mexican Restaurant application, providing an overview of key metrics and system status.";
}

<form method="get" class="row g-3 my-4 align-items-end">
    <div class="col-md-4">
        <label for="startDate" class="form-label text-dark fw-bold">From Date</label>
        <input type="date" name="startDate" id="startDate" class="form-control" value="@Model.StartDate?.ToString("yyyy-MM-dd")" />
    </div>
    <div class="col-md-4">
        <label for="endDate" class="form-label text-dark fw-bold">To Date</label>
        <input type="date" name="endDate" id="endDate" class="form-control" value="@Model.EndDate?.ToString("yyyy-MM-dd")" />
    </div>
    <div class="col-md-4">
        <div class="d-flex flex-wrap gap-2">
            <button type="submit" class="btn btn-success flex-fill" aria-label="Apply filters by date">
                <i class="bi bi-funnel-fill me-1"></i> Filter
            </button>
            <a href="@Url.Action("Index", "Dashboard")" class="btn btn-secondary flex-fill" aria-label="Reset filters">
                <i class="bi bi-x-circle me-1"></i> Reset
            </a>
        </div>
    </div>
</form>

<div class="container">
    <h2 class="mb-4 text-center text-success">Admin Dashboard</h2>

    <div class="row g-4">
        <div class="col-md-3 col-sm-6">
            <div class="card text-dark bg-success h-100 shadow-sm">
                <div class="card-body text-center">
                    <h3 class="mb-1">Total Users</h3>
                    <h4 class="mb-0">@Model.TotalUsers</h4>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="card text-dark h-100 shadow-sm" style="background-color: #F0B27A">
                <div class="card-body text-center">
                    <h3 class="mb-1">Total Orders</h3>
                    <h4 class="mb-0">@Model.TotalOrders</h4>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="card text-dark h-100 shadow-sm" style="background-color: #F7DC6F">
                <div class="card-body text-center">
                    <h3 class="mb-1">Total Products</h3>
                    <h4 class="mb-0">@Model.TotalProducts</h4>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="card text-dark h-100 shadow-sm" style="background-color: #76D7C4">
                <div class="card-body text-center">
                    <h3 class="mb-1">Total Revenue</h3>
                    <h4 class="mb-0">$@Model.TotalRevenue.ToString("N2")</h4>
                </div>
            </div>
        </div>
    </div>

    <hr class="my-3" />

    <div class="row">
        <div class="col-lg-4">
            <h4 class="text-center mb-3">Top Selling Products</h4>
            @if (Model.TopProductNames != null && Model.TopProductSales != null)
            {
                <canvas id="topProductsChart" aria-label="Top selling products chart" role="img" height="200"></canvas>
            }
            else
            {
                <p class="text-muted text-center">No data available for top products.</p>
            }
        </div>

        <div class="col-lg-4">
            <h4 class="text-center mb-3">Sales by Category</h4>
            @if (Model.CategorySales != null && Model.CategorySales.Any())
            {
                <canvas id="categoryChart" aria-label="Top selling Category chart" role="img" height="300"></canvas>
            }
        </div>

        <div class="col-lg-4">
            <h4 class="text-center mb-3">Revenue Timeline</h4>
            @if (Model.RevenueByDate != null && Model.RevenueByDate.Any())
            {
                <canvas id="revenueChart" aria-label="Revenue timeline chart" role="img" height="300"></canvas>
            }
            else
            {
                <p class="text-muted text-center">No revenue data to display.</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const topNames = @Html.Raw(Json.Serialize(Model.TopProductNames ?? new List<string>()));
        const topSales = @Html.Raw(Json.Serialize(Model.TopProductSales ?? new List<int>()));
        const revenueLabels = @Html.Raw(Json.Serialize(Model.RevenueByDate != null && Model.RevenueByDate.Any() ? Model.RevenueByDate.Keys.ToList() : new List<string>()));
        const revenueValues = @Html.Raw(Json.Serialize(Model.RevenueByDate != null && Model.RevenueByDate.Any() ? Model.RevenueByDate.Values.ToList() : new List<decimal>()));
        const categoryLabels = @Html.Raw(Json.Serialize(Model.CategorySales != null && Model.CategorySales.Any() ? Model.CategorySales.Keys.ToList() : new List<string>()));
        const categoryValues = @Html.Raw(Json.Serialize(Model.CategorySales != null && Model.CategorySales.Any() ? Model.CategorySales.Values.ToList() : new List<int>()));

        if (topNames.length > 0 && topSales.length > 0) {
            new Chart(document.getElementById("topProductsChart"), {
                type: 'doughnut',
                data: {
                    labels: topNames,
                    datasets: [{
                        label: 'Sales Count',
                        data: topSales,
                        backgroundColor: ['#198754', '#F0B27A', '#F7DC6F', '#76D7C4', '#F1948A'],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'bottom' },
                        title: { display: true, text: 'Top Products' }
                    }
                }
            });
        }

        if (categoryLabels.length > 0 && categoryValues.length > 0) {
            new Chart(document.getElementById("categoryChart"), {
                type: 'pie',
                data: {
                    labels: categoryLabels,
                    datasets: [{
                        data: categoryValues,
                        backgroundColor: ['#F0B27A', '#F7DC6F', '#198754', '#76D7C4', '#F1948A'],
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'bottom' },
                        title: { display: true, text: 'Sales by Category' }
                    }
                }
            });
        }

        if (revenueLabels.length > 0 && revenueValues.length > 0) {
            new Chart(document.getElementById("revenueChart"), {
                type: 'line',
                data: {
                    labels: revenueLabels,
                    datasets: [{
                        label: 'Revenue ($)',
                        data: revenueValues,
                        fill: true,
                        borderColor: '#198754',
                        backgroundColor: 'rgba(25,135,84,0.2)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'bottom' },
                        title: { display: true, text: 'Revenue Over Time' }
                    },
                    scales: {
                        x: { title: { display: true, text: 'Date' } },
                        y: { title: { display: true, text: 'Amount ($)' } }
                    }
                }
            });
        }
    </script>
}
