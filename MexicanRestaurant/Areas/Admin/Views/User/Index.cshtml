@using MexicanRestaurant.Areas.Admin.Models
@model UserViewModel
@{
    ViewData["Title"] = "Manage Users";
    ViewData["MetaDescription"] = "Manage user accounts, roles, and permissions for the Mexican Restaurant application.";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-12">
            <div class="card shadow-sm rounded">
                <div class="card-header bg-success text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">User Management</h5>
                        <a class="btn btn-light btn-sm" asp-area="Admin" asp-controller="AuditLog" asp-action="Index">
                            <i class="bi bi-clipboard-data"></i> Audit Logs
                        </a>
                        <a class="btn btn-light btn-sm" asp-area="Identity" asp-controller="Account" asp-action="Register">
                            <i class="bi bi-person-plus"></i> Add a User
                        </a>
                    </div>
                </div>
                <div class="card-body table-responsive">
                    <table class="table table-bordered table-striped table-hover align-middle">
                        <thead class="table-success">
                            <tr>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Email</th>
                                <th>Roles</th>
                                <th colspan="2" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.Users.Any())
                            {
                                <tr>
                                    <td colspan="6" class="text-center text-muted">There are no user accounts.</td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var user in Model.Users)
                                {
                                    <tr>
                                        <td>@user.FirstName</td>
                                        <td>@user.LastName</td>
                                        <td>@user.Email</td>
                                        <td>
                                            @foreach (var role in user.RoleNames ?? new List<string>())
                                            {
                                                <span class="badge bg-primary me-1">@role</span>
                                            }
                                        </td>
                                        <td>
                                                <button type="submit" class="btn btn-sm btn-danger"
                                                    data-bs-toggle="modal" data-bs-target="#deleteModal" data-user-id="@user.Id" data-user-name="'@user.FirstName @user.LastName' '@user.Email'">
                                                Delete
                                            </button>
                                        </td>
                                        <td>
                                            @foreach (var role in Model.Roles)
                                            {
                                                bool hasRole = user.RoleNames?.Contains(role.Name ?? string.Empty) ?? false;

                                                <form method="post"
                                                      asp-action="@(hasRole ? "RemoveFromRole" : "AddToRole")"
                                                      asp-route-userId="@user.Id"
                                                      asp-route-roleName="@role.Name"
                                                      class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit"
                                                            class="btn btn-sm @(hasRole ? "btn-warning" : "btn-success") me-1">
                                                        @(hasRole ? $"Remove from {role.Name}" : $"Add to {role.Name}")
                                                    </button>
                                                </form>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div class="card-footer text-muted">
                    <p class="mb-0">Total Users: @Model.Users.Count()</p>
                    <div class="d-flex justify-content-between mt-2">
                        <form method="post" asp-action="CreateRole">
                            @Html.AntiForgeryToken()
                            <div class="input-group">
                                <label class="input-group-text" for="roleName">Create Role</label>
                                <input type="text" name="roleName" class="form-control" placeholder="Create a new role" required />
                                <button type="submit" class="btn btn-success">Create Role</button>
                            </div>
                        </form>
                        <form method="post" asp-action="DeleteRole">
                            @Html.AntiForgeryToken()
                            <div class="input-group">
                                <label class="input-group-text" for="roleName">Delete Role</label>
                                <input type="text" name="roleName" class="form-control" placeholder="Delete role" required />
                                <button type="submit" class="btn btn-danger">Delete Role</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
         </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form method="post" asp-action="Delete">
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete <strong id="modalUserName"></strong> ?
                    <input type="hidden" name="id" id="modalUserId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const userId = button.getAttribute('data-user-id');
            const userName = button.getAttribute('data-user-name');

            document.getElementById('modalUserId').value = userId;
            document.getElementById('modalUserName').textContent = userName;
        });
    </script>
}